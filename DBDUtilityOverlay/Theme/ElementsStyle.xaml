<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Color x:Key="GrayColor">#646970</Color>
    <Color x:Key="RedColor">#d63638</Color>

    <SolidColorBrush x:Key="GreyBrush"
                     Color="{StaticResource GrayColor}"/>
    <SolidColorBrush x:Key="RedBrush"
                     Color="{StaticResource RedColor}"/>
    
    <Style x:Key="ToggleButtonCBStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="#FE6584"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="TextBox.Text" Value=">"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Height="40"
                            CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Left"/>
                            <TextBlock Text="{TemplateBinding TextBox.Text}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Right"
                                       Margin="0,0,10,0">
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90"/>
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF4C70"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="#FE6584"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid Width="150">
                        <ToggleButton Name="ToggleButton"
                                  Foreground="White"
                                  FontSize="18"
                                  Style="{StaticResource ToggleButtonCBStyle}"
                                  IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}">
                            <Border>
                                <ContentPresenter IsHitTestVisible="False" 
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  Margin="20,0,0,0"/>
                            </Border>
                        </ToggleButton>
                        <Popup Name="Popup" 
                               Placement="Bottom" 
                               AllowsTransparency="True" 
                               Focusable="False"
                               HorizontalAlignment="Center"
                               IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Border BorderThickness="1" 
                                    BorderBrush="Gray" 
                                    Background="White" 
                                    CornerRadius="5">
                                <ScrollViewer Margin="4,6,4,6">
                                    <StackPanel IsItemsHost="True" 
                                            KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF4C70"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            Background="{DynamicResource GreyBrush}"
                            Width="80"
                            Height="40"
                            CornerRadius="20"
                            SnapsToDevicePixels="true">
                        <Grid Background="Transparent">
                            <Ellipse x:Name="ellipse"
                                     Fill="White"
                                     Width="30"
                                     Height="30"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="5,0,0,0"
                                     SnapsToDevicePixels="True"/>
                            <TextBlock x:Name="textOff"
                                       Text="Off"
                                       Foreground="White"
                                       FontSize="20"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Margin="0,0,10,0"
                                       Opacity="1"/>
                            <TextBlock x:Name="textOn"
                                       Text="On"
                                       Foreground="White"
                                       FontSize="20"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0"
                                       Opacity="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                            Storyboard.TargetProperty="(Margin)"
                                                            From="5,0,0,0"
                                                            To="45,0,0,0"
                                                            Duration="0:0:0.15"
                                                            AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOff"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOn"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        From="{StaticResource GrayColor}"
                                                        To="{StaticResource RedColor}"
                                                        Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                            Storyboard.TargetProperty="(Margin)"
                                                            From="45,0,0,0"
                                                            To="5,0,0,0"
                                                            Duration="0:0:0.15"
                                                            AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOff"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOn"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        From="{StaticResource RedColor}"
                                                        To="{StaticResource GrayColor}"
                                                        Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FE6584"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="100" 
                            Height="40"
                            CornerRadius="20"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF4C70"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMinStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#101517"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="30"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="━"
                               Foreground="White"
                               FontSize="18"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1d2327"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#101517"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="30"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="✕"
                                   Foreground="White"
                                   FontSize="18"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" 
                    Name="Border"
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
                    CornerRadius="0" 
                    BorderThickness="1, 1, 1, 1" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" 
                    Margin="1, 1, 1, 1" 
                    BorderBrush="#444" 
                    Name="ButtonBorder"
                    CornerRadius="0, 0, 0, 0" 
                    BorderThickness="0, 0, 0, 0" 
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1" 
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center" Fill="#444"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="Black"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Grid.Column="2"
                                      ClickMode="Press" 
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" 
                                          Margin="5, 3, 23, 3" 
                                          IsHitTestVisible="False"
                                          HorizontalAlignment="Left" 
                                          VerticalAlignment="Center"                              
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox Name="PART_EditableTextBox" 
                                 Margin="3, 3, 23, 3"                     
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden" 
                                 Background="Transparent"
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center"
                                 Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup Name="Popup" 
                               Placement="Bottom"
                               Focusable="False" 
                               AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown" 
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" 
                                        Background="White" 
                                        Margin="0, 1, 0, 0"
                                        CornerRadius="0" 
                                        BorderThickness="1,1,1,1" 
                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>