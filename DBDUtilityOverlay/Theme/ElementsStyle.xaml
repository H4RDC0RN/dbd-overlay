<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="WhiteGrayColor">#dcdcde</Color>
    <Color x:Key="GrayColor">#646970</Color>
    <Color x:Key="RedColor">#d63638</Color>
    <Color x:Key="RedLightColor">#e65054</Color>

    <SolidColorBrush x:Key="WhiteGreyBrush" Color="{StaticResource WhiteGrayColor}"/>
    <SolidColorBrush x:Key="GreyBrush" Color="{StaticResource GrayColor}"/>
    <SolidColorBrush x:Key="RedBrush" Color="{StaticResource RedColor}"/>
    <SolidColorBrush x:Key="RedLightBrush" Color="{StaticResource RedLightColor}"/>

    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border"
                            Background="{DynamicResource GreyBrush}"
                            Width="80"
                            Height="40"
                            CornerRadius="20"
                            SnapsToDevicePixels="true">
                        <Grid Background="Transparent">
                            <Ellipse x:Name="ellipse"
                                     Fill="White"
                                     Width="30"
                                     Height="30"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="5,0,0,0"
                                     SnapsToDevicePixels="True"/>
                            <TextBlock x:Name="textOff"
                                       Text="Off"
                                       Foreground="White"
                                       FontSize="20"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Margin="0,0,10,0"
                                       Opacity="1"/>
                            <TextBlock x:Name="textOn"
                                       Text="On"
                                       Foreground="White"
                                       FontSize="20"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="10,0,0,0"
                                       Opacity="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                            Storyboard.TargetProperty="(Margin)"
                                                            From="5,0,0,0"
                                                            To="45,0,0,0"
                                                            Duration="0:0:0.15"
                                                            AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOff"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOn"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        From="{StaticResource GrayColor}"
                                                        To="{StaticResource RedColor}"
                                                        Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetName="ellipse"
                                                            Storyboard.TargetProperty="(Margin)"
                                                            From="45,0,0,0"
                                                            To="5,0,0,0"
                                                            Duration="0:0:0.15"
                                                            AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOff"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="0"
                                                         To="1"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <DoubleAnimation Storyboard.TargetName="textOn"
                                                         Storyboard.TargetProperty="(Opacity)"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.15"
                                                         AutoReverse="False"/>
                                        <ColorAnimation Storyboard.TargetName="border"
                                                        Storyboard.TargetProperty="Background.Color"
                                                        From="{StaticResource RedColor}"
                                                        To="{StaticResource GrayColor}"
                                                        Duration="0:0:0.15"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource RedBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="30" 
                            Height="30"
                            CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource RedLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonMinStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#101517"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="30"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="━"
                               Foreground="White"
                               FontSize="18"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#1d2327"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#101517"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="30"
                            Background="{TemplateBinding Background}">
                        <TextBlock Text="✕"
                                   Foreground="White"
                                   FontSize="18"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" 
                    Name="Border"
                    Background="{StaticResource RedBrush}"/>
            <Border Grid.Column="1"
                    Name="ButtonBorder"
                    Background="{StaticResource RedBrush}"/>

            <Path Name="Arrow" Grid.Column="1" 
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center" Fill="{StaticResource WhiteGreyBrush}"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource RedLightBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource RedLightBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="White"/>
        <Setter Property="TextElement.FontSize" Value="16"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" 
                                      Grid.Column="2"
                                      ClickMode="Press" 
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" 
                                          Margin="10,5,0,5" 
                                          IsHitTestVisible="False"
                                          HorizontalAlignment="Left" 
                                          VerticalAlignment="Center"                              
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <Popup Name="Popup" 
                               Placement="Bottom"
                               Focusable="False" 
                               AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown" 
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" 
                                        Background="{StaticResource RedBrush}"/>
                                <ScrollViewer SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <TextBlock Text="{TemplateBinding Content}" Background="{TemplateBinding Background}" Padding="10,5,0,5"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource RedLightBrush}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatRightButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="White" Height="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatLeftButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True" Background="{DynamicResource RedBrush}" Height="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle x:Name="ThumbRect" Height="20" Width="12" RadiusX="5" RadiusY="5">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Setter Property="Fill" Value="{StaticResource RedBrush}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Fill" Value="{StaticResource RedLightBrush}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="Slider" TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatLeftButton}"  Command="Slider.DecreaseLarge"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatRightButton}" Command="Slider.IncreaseLarge"/>
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="Horizontal_Slider" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21"/>
                <Setter Property="MinWidth" Value="104"/>
                <Setter Property="Template" Value="{StaticResource Slider}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBoxInputStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource WhiteGreyBrush}"/>
        <Setter Property="CaretBrush" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Border" Background="Transparent" Focusable="True" BorderThickness="0,0,0,1" 
                            BorderBrush="{TemplateBinding Background}" SnapsToDevicePixels="True" Cursor="IBeam">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>